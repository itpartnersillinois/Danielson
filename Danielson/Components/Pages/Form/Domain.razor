@page "/Form/Domain/{FormId:int}"
@attribute [Authorize(Roles = "Student,Supervisor,CooperatingTeacher,Admin,ProgramStaff,CoteStaff")]

@if (DomainObject != null && CurrentForm != null && FormImportInformation != null)
{
    <PageTitle>@FormImportInformation.Title | Evaluation Form | CoTE Portal | Illinois</PageTitle>
    <div class="danielson-name">
        <h1>@FormImportInformation.Title</h1>
        <FormHeader FormId="CurrentForm.AssignmentId" IsMidterm="CurrentForm.IsMidterm" EvaluatedBy="@FormImportInformation.EvaluatedBy" EvaluationDate="@CurrentForm.DateEvaluatedString"
                    FormType="@CurrentForm.FormType" Semester="@CurrentForm.SemesterDate" IsReadOnly="@IsReadOnly" OnChangeCallback="ChangeFormType"></FormHeader>
    </div>
}
@if (DomainObject != null && CurrentForm != null && CurrentFormTemplate != null && !ShowFinal)
{
    <div class="danielson-title">
        <ul>
            @foreach (var domain in DomainList.Domains)
            {
                <li><button class="@(domain.DomainEnum == DomainObject.DomainEnum ? DomainObject.DomainEnum.ToString() : "")" @onclick="() => ChangePage(domain.DomainEnum, false)">@domain.Title</button></li>
            }
            <li><button @onclick="() => ChangePage(null, true)">Final Summary</button></li>
        </ul>
        <div>
            <h2>@DomainObject.Title</h2>
            <p>@DomainObject.DescriptionHtml</p>
        </div>
    </div>
    <div class="danielson-components @DomainObject.DomainEnum.ToString()">
        @foreach (var component in DomainObject.Components)
        {
            @if (CurrentForm.ShowComponents)
            {
                <ComponentItem Component="component" FormId="CurrentForm.Id" ShowNotObserved="@(CurrentForm.ShowNotObserved || CurrentForm.IsMidterm)" ShowQuantitativeAnswer="@CurrentForm.ShowQuantitativeAnswer" ConsiderationValues="@CurrentFormTemplate.ConsiderationValues(DomainObject.DomainEnum, component.ComponentOrder)" ComponentAnswer="@CurrentForm.GetComponentAnswer(DomainObject.DomainEnum, component.ComponentOrder)" IsReadOnly="@IsReadOnly" OnChangeCallback="AddComponentAnswerToForm"></ComponentItem>
            }
            else
            {
                <ComponentReadOnly Component="component" ConsiderationValues="@CurrentFormTemplate.ConsiderationValues(DomainObject.DomainEnum, component.ComponentOrder)" ShowNotObserved="@(CurrentForm.ShowNotObserved || CurrentForm.IsMidterm)" ShowQuantitativeAnswer="@CurrentForm.ShowQuantitativeAnswer"></ComponentReadOnly>
            }
        }
        <DomainItem DomainAnswer="@CurrentForm.GetDomainAnswer(DomainObject.DomainEnum)" IsReadOnly="@IsReadOnly" OnChangeCallback="AddDomainAnswerToForm"></DomainItem>
    </div>
    <div>Last changed: @CurrentForm.LastUpdated.ToShortDateString() @CurrentForm.LastUpdated.ToShortTimeString()</div>
    <div class="danielson-button-footer">
        <button class="il-button il-theme-white" @onclick="ChangePagePrevious" style="float: left;">Previous</button>
        <button class="il-button il-theme-white" @onclick="ChangePageNext" style="float: right;">Next</button>
    </div>
}
@if (ShowFinal && CurrentForm != null)
{
    <div class="danielson-title">
        <ul>
            @foreach (var domain in DomainList.Domains)
            {
                <li><button @onclick="() => ChangePage(domain.DomainEnum, false)">@domain.Title</button></li>
            }
            <li><button class="Final" @onclick="() => ChangePage(null, true)">Final Summary</button></li>
        </ul>
        <div>
            <h2>Final Summary</h2>
            <p>Please review your responses below. Ensure you have completed all four domains before selecting a final summary score, signing, and submitting.</p>
        </div>
    </div>
    <div class="danielson-title">
        <button class="il-button il-theme-white" @onclick="ExpandAll">Expand All</button>
        <button class="il-button il-theme-white" @onclick="CollapseAll">Collapse All</button>
    </div>
    @foreach (var domain in DomainList.Domains)
    {
        <DomainReview DomainEnum="domain.DomainEnum" Form="CurrentForm" Title="@domain.Title" ShowErrors="CurrentForm.ShowComponents" ShowQuantitativeAnswer="@CurrentForm.ShowQuantitativeAnswer"></DomainReview>
    }

    @if (IsReadOnly)
    {
        <div class="danielson-final">
            @if (CurrentForm.ShowComponents)
            {
                <div>
                    Final Summary: @CurrentForm.FinalSummary
                </div>
            }
            @if (CurrentForm.IsSigned && !string.IsNullOrWhiteSpace(FormImportInformation?.EvaluatedBy))
            {
                <div>
                    Signed by @FormImportInformation?.EvaluatedBy
                </div>
            }
            <div>Last changed: @CurrentForm.LastUpdatedText</div>
        </div>
    }
    else
    {
        <div class="danielson-final">
            @if (!AreAllComponentsAnswered())
            {
                <div class="danielson-answer" style="margin-bottom: 20px;">
                    <p class="title-alert">Not all components have been answered. Please complete all components before selecting a final summary and signing.</p>
                    <ul>
                        @foreach (var componentTitle in ComponentsNotAnswered)
                        {
                            <li>@componentTitle</li>
                        }
                    </ul>
                </div>
            }
            @if (CurrentForm.ShowComponents)
            {
                <div>
                    <label for="final-summary" class="data-required">Final Summary</label>
                    <select id="final-summary" disabled="@(!AreAllComponentsAnswered())" readonly="@IsReadOnly" aria-required="true" @bind="CurrentForm.FinalSummary" style="width: 350px;">
                        <option value="">Select</option>
                        @foreach (var final in FinalAnswers)
                        {
                            <option value="@final">@final</option>
                        }
                    </select>
                    <p>You must select a final summary to submit.</p>
                </div>
            }
            <div>
                <label for="final-signature" class="data-required">Signature</label>
                <input id="final-signature" disabled="@(!AreAllComponentsAnswered())" aria-required="true" type="checkbox" checked="@CurrentForm.IsSigned" @onchange="CheckFinal"> <span>@FormImportInformation?.EvaluatedBy</span>
                <p>You must sign to submit.</p>
            </div>
            <div>Last changed: @CurrentForm.LastUpdatedText</div>
            <div>
                <button class="il-button il-theme-white" @onclick="SaveForm" disabled="@(!(AreAllComponentsAnswered() && IsFormSigned()))">Submit</button>
            </div>
            <div id="update-alert" role="alert"><span id="update-alert-message">Evaluation Form has been submitted</span><button onclick="removeAlertOnScreen();">X</button></div>
        </div>
    }
}
